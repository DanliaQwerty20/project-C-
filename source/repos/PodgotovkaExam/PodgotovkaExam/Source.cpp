#include <iostream>
using namespace std;
class Base
{
public:
    int m_public;
protected:
    int m_protected;
private:
    int m_private;
};

class Pri : private Base // обратите внимание: закрытое наследование
{
    // «акрытое наследование означает:
    //  ќткрытые унаследованные члены станов€тс€ закрытыми
    // (поэтому m_public рассматриваетс€ как закрытый).
    //  «ащищенные унаследованные члены станов€тс€ закрытыми
    // (поэтому m_protected рассматриваетс€ как закрытый)
    //  «акрытые унаследованные члены остаютс€ недоступными
    // (поэтому m_private недоступен)
public:
    Pri()
    {

        // к закрытым членам базового класса
    }
}; 
int main()
{
    // ¬нешний доступ использует спецификаторы доступа класса,
    // к которому осуществл€етс€ доступ.

    // ¬ этом случае спецификаторы доступа base.
    int* arr = new int[10] {0};
    for (int i = 0; i < 10; i++) {
        cout << arr[i];
    }
    return 0;
}