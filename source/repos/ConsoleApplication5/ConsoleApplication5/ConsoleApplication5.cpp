#include <stdio.h>
#include <windows.h>
#include <malloc.h>
struct list
{
    char symbol;
    struct list* next;
};


struct list* initiate(char c)
{
    struct list* list;
    list = (struct list*)malloc(sizeof(struct list));
    if (list == NULL)
    {
        printf_s("Память не выделена. Завершение программы...\n");
        return(0);
    }
    list->symbol = c;
    list->next = NULL;
    return(list);
}


struct list* addelement(struct list* current, char c)
{
    struct list* temp, * p;
    temp = initiate(c);
    p = current->next;
    current->next = temp;
    temp->next = p;
    return(temp);
}


void printlist(struct list* list)
{
    while (list != NULL)
    {
        printf("%c ", list->symbol);    //выводить символ, находящийся в каждом элементе
        list = list->next;                //передвигаем указатель на последующий элемент
    }
}




int menu(struct list* core)   //функция menu принимает на вход указатель на список
{
    struct list* tmp = core;
    struct list* current = NULL;                    //создам указатель на начало списка
    int comm = 0;
    char c;
    //команда пользователя
    system("cls");
    printf("Выберите, что должна сделать программа:\n\n");
    while (true)
    {
        if (core->symbol == NULL)
        {
            printf("1.Добавить первый элемент;\n\n");
        }
        printf("2.Очистить список;\n\n");
        printf("3.Проверка пустоты списка;\n\n");
        printf("4.Установить указатель на начало списка;\n\n");
        printf("5.Проверить находится ли указатель в конце списка;\n\n");
        printf("6.Переместить рабочий указатель вправо;\n\n");
        printf("7.Вывести значение элемента списка после рабочего указателя;\n\n");
        printf("8.Удалить элемент списка после рабочего указателя;\n\n");
        printf("9.Взять значение элемента списка после рабочего указателя;\n\n");
        printf("10.Изменить значение элемента списка после рабочего указателя;\n\n");
        printf("11.Добавить элемент списка после рабочего указателя;\n\n");
        printf("12.Завершение работы со списком;\n\n");

        scanf_s("%d", &comm);
        struct list* s = core;                                      //этот указатель понадобится при визуальном отображении указателя на текущий элемент
        system("cls");
        if (comm < 1 || comm > 12) printf("Пожалуйста, введите корректный пункт меню:\n");

        switch (comm)
        {
        case 1:
            current = core;//текущий указатель смотрит на новое начало списка
            //создаём символ
            printf("Введите первый элемент списка:\n");
            c = getchar();
            current->symbol = c;
            tmp = core;
        case 2:

        default:
            break;
        }
    
    }
}

//первые символы,которые я вводил- as
//head->value=='a'
//head->prt->value=='s'

//написание программы выполнение всей программы односвязного списка
//программа должна работать в дилогом
//меню обяз
//адекватное сообщение в ответ (либо результат либо ошибка по которой не выполнено действие)
//после выполнения каждого действия должен печататься список с указанием места текущего местоположения 
//очистка списка
//все в отдельных функциях

//1 начать работу с списком
//2 сделать список пустым
//3 проверка списка(пуст не пуст)
//4 установить указатель в начало списка
//5 проверка указателя на конец списка
//6 передвинуть вперед на 1 элемент указатель
//7 показать элемент списка за указателем
//8 удалить элемент списка за указателем
//9 взять элемент списка за указателем
//10 изменить значение за указателем
//11 добавить элемент за указателем
//12 
//13 закончить работу с указателем